name: CI/CD Pipeline
on:
    pull_request:
    push:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and test with Docker Compose
              run: |
                  docker compose -f docker-compose.test.yml build
                  docker compose -f docker-compose.test.yml up -d
                  docker compose -f docker-compose.test.yml exec -T web pytest
                  docker compose -f docker-compose.test.yml down

            - name: Save test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-results
                  path: test-results/

    deploy:
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        timeout-minutes: 15
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker images
              run: |
                  docker compose build
                  docker compose push

            - name: Trigger production deployment
              run: |
                  curl -X POST ${{ secrets.PRODUCTION_WEBHOOK_URL }} \
                    -H "Authorization: Bearer ${{ secrets.PRODUCTION_DEPLOY_TOKEN }}" \
                    -H "Content-Type: application/json" \
                    -d '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}' \
                    --fail
