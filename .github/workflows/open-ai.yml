name: Open AI Subsystem CI/CD
on:
    pull_request:
    push:
        branches: [main, fix-ci-cd]

jobs:
    test-open-ai:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Create .env file
              run: |
                  echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
                  echo "MONGO_URI=mongodb://mongodb:27017" >> .env

            - name: Build and test with Docker Compose
              run: |
                  docker compose build
                  docker compose up -d
                  docker compose exec open-ai pytest
                  docker compose down

    deploy:
        needs: test-open-ai
        if: github.event_name == 'push'
        runs-on: ubuntu-latest
        timeout-minutes: 15
        steps:
            - uses: actions/checkout@v4

            - name: Create .env file
              run: |
                  echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
                  echo "MONGO_URI=mongodb://mongodb:27017" >> .env

            - name: Build and push Docker image
              run: |
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
                  docker compose build open-ai
                  docker tag 5-final-proj5-febv-open-ai ${{ secrets.DOCKERHUB_USERNAME }}/open-ai:latest
                  docker push ${{ secrets.DOCKERHUB_USERNAME }}/open-ai:latest

            - name: Deploy to Droplet
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.DROPLET_IP }}
                  username: root
                  password: ${{ secrets.DROPLET_PASSWORD }}
                  script: |
                      # Login to Docker Hub
                      echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

                      # Create .env file
                      echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
                      echo "MONGO_URI=mongodb://mongodb:27017" >> .env

                      # Copy docker-compose.yml
                      cat > docker-compose.yml << 'EOL'
                      services:
                          web:
                              image: ${{ secrets.DOCKERHUB_USERNAME }}/web-app:latest
                              ports:
                                  - "5002:5002"
                              depends_on:
                                  - mongodb
                                  - open-ai
                              env_file:
                                  - .env
                              environment:
                                  - FLASK_ENV=development
                                  - OPENAI_SERVICE_URL=http://open-ai:8000

                          mongodb:
                              image: mongo
                              container_name: mongodb
                              ports:
                                  - "27017:27017"
                              volumes:
                                  - mongo-data:/data/db

                          open-ai:
                              image: ${{ secrets.DOCKERHUB_USERNAME }}/open-ai:latest
                              ports:
                                  - "8000:8000"
                              container_name: open-ai
                              depends_on:
                                  - mongodb
                              env_file:
                                  - .env
                              environment:
                                  - MONGO_URI=mongodb://mongodb:27017

                      volumes:
                          mongo-data:
                      EOL

                      # Stop and remove existing containers
                      docker compose down

                      # Pull the latest open-ai image
                      docker pull ${{ secrets.DOCKERHUB_USERNAME }}/open-ai:latest

                      # Start the containers
                      docker compose up -d

                      # Clean up unused images
                      docker image prune -f
