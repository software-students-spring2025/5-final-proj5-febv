name: Web App CI
on:
    pull_request:
    push:
        branches: [main, fix-ci-cd]

jobs:
    test-web-app:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Create .env from secrets
              run: |
                  echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
                  echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> .env

            - name: Build and test with Docker Compose
              run: |
                  docker compose build
                  docker compose up -d
                  docker compose exec web pytest
                  docker compose down

    deploy:
        needs: test-web-app
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        timeout-minutes: 15
        steps:
            - uses: actions/checkout@v4

            - name: Push Docker image to Docker Hub
              run: |
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
                  docker tag 5-final-proj5-febv-web ${{ secrets.DOCKERHUB_USERNAME }}/web-app:latest
                  docker push ${{ secrets.DOCKERHUB_USERNAME }}/web-app:latest

            - name: Deploy to Droplet
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.DROPLET_IP }}
                  username: root
                  password: ${{ secrets.DROPLET_PASSWORD }}
                  script: |
                      # Login to Docker Hub
                      echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

                      # Stop and remove existing containers
                      docker compose down

                      # Pull the latest web-app image
                      docker pull ${{ secrets.DOCKERHUB_USERNAME }}/web-app:latest

                      # Start the containers
                      docker compose up -d

                      # Clean up unused images
                      docker image prune -f
